[{"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\index.js":"1","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\reportWebVitals.js":"2","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\App.js":"3","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\store.js":"4","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\allUserAction.js":"5","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\authAction.js":"6","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\AdminPage.js":"7","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\index.js":"8","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Header.js":"9","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Body.js":"10","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\index.js":"11","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\userReducer.js":"12","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\authReducer.js":"13","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\tokenReducer.js":"14","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\LeftMenu.js":"15","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Footer.js":"16","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\LeftMenu.js":"17","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\Body.js":"18","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Login.js":"19","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Notfound.js":"20","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ActiveEmail.js":"21","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Register.js":"22","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Successfully.js":"23","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ForgotPw.js":"24","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Test.js":"25","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ResetPassword.js":"26","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersDetail.js":"27","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Profile.js":"28","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Home.js":"29","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\News\\NewsPage.js":"30","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js":"31","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\functionCheck.js":"32","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Account.js":"33","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Advertisement.js":"34","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js":"35","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\News.js":"36","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Movie.js":"37","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\Config.js":"38","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js":"39","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js":"40","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\Information.js":"41","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\MovieDetail.js":"42","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Totalmovie.js":"43","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\Comments.js":"44","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\LikeDislikes.js":"45","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\ReplyComment.js":"46","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\SingleComment.js":"47","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Review.js":"48","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationReview.js":"49","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\header2.js":"50"},{"size":384,"mtime":1617678349714,"results":"51","hashOfConfig":"52"},{"size":375,"mtime":1617421466913,"results":"53","hashOfConfig":"52"},{"size":1643,"mtime":1617650031090,"results":"54","hashOfConfig":"52"},{"size":433,"mtime":1617421466913,"results":"55","hashOfConfig":"52"},{"size":392,"mtime":1617421466913,"results":"56","hashOfConfig":"52"},{"size":530,"mtime":1617421466913,"results":"57","hashOfConfig":"52"},{"size":775,"mtime":1617421466897,"results":"58","hashOfConfig":"52"},{"size":219,"mtime":1617421466913,"results":"59","hashOfConfig":"52"},{"size":3416,"mtime":1618085280838,"results":"60","hashOfConfig":"52"},{"size":2501,"mtime":1617922302194,"results":"61","hashOfConfig":"52"},{"size":160,"mtime":1617421466913,"results":"62","hashOfConfig":"52"},{"size":288,"mtime":1617421466913,"results":"63","hashOfConfig":"52"},{"size":598,"mtime":1617421466913,"results":"64","hashOfConfig":"52"},{"size":289,"mtime":1617421466913,"results":"65","hashOfConfig":"52"},{"size":1465,"mtime":1617421466897,"results":"66","hashOfConfig":"52"},{"size":1817,"mtime":1617680763747,"results":"67","hashOfConfig":"52"},{"size":1612,"mtime":1617574135851,"results":"68","hashOfConfig":"52"},{"size":836,"mtime":1617574226483,"results":"69","hashOfConfig":"52"},{"size":4387,"mtime":1617679041333,"results":"70","hashOfConfig":"52"},{"size":465,"mtime":1617421466913,"results":"71","hashOfConfig":"52"},{"size":1073,"mtime":1617421466913,"results":"72","hashOfConfig":"52"},{"size":5424,"mtime":1617421466913,"results":"73","hashOfConfig":"52"},{"size":1077,"mtime":1617421466913,"results":"74","hashOfConfig":"52"},{"size":1489,"mtime":1617421466913,"results":"75","hashOfConfig":"52"},{"size":960,"mtime":1617421466913,"results":"76","hashOfConfig":"52"},{"size":2175,"mtime":1617421466913,"results":"77","hashOfConfig":"52"},{"size":168,"mtime":1617421466913,"results":"78","hashOfConfig":"52"},{"size":8017,"mtime":1617421466913,"results":"79","hashOfConfig":"52"},{"size":10762,"mtime":1618150804069,"results":"80","hashOfConfig":"52"},{"size":1101,"mtime":1617421466913,"results":"81","hashOfConfig":"52"},{"size":2006,"mtime":1617421466913,"results":"82","hashOfConfig":"52"},{"size":489,"mtime":1617421466913,"results":"83","hashOfConfig":"52"},{"size":4038,"mtime":1617421466897,"results":"84","hashOfConfig":"52"},{"size":306,"mtime":1617421466897,"results":"85","hashOfConfig":"52"},{"size":2848,"mtime":1617477689221,"results":"86","hashOfConfig":"52"},{"size":7068,"mtime":1618098081333,"results":"87","hashOfConfig":"52"},{"size":4320,"mtime":1617421466897,"results":"88","hashOfConfig":"52"},{"size":475,"mtime":1617421466866,"results":"89","hashOfConfig":"52"},{"size":17821,"mtime":1617636715794,"results":"90","hashOfConfig":"52"},{"size":1111,"mtime":1617477791369,"results":"91","hashOfConfig":"52"},{"size":4530,"mtime":1617421466897,"results":"92","hashOfConfig":"52"},{"size":3437,"mtime":1618151397999,"results":"93","hashOfConfig":"52"},{"size":2060,"mtime":1617485985608,"results":"94","hashOfConfig":"52"},{"size":2536,"mtime":1617571916805,"results":"95","hashOfConfig":"52"},{"size":5598,"mtime":1617573726667,"results":"96","hashOfConfig":"52"},{"size":1812,"mtime":1611251147165,"results":"97","hashOfConfig":"52"},{"size":3494,"mtime":1617573381012,"results":"98","hashOfConfig":"52"},{"size":8754,"mtime":1618150155843,"results":"99","hashOfConfig":"52"},{"size":3955,"mtime":1617641010373,"results":"100","hashOfConfig":"52"},{"size":602,"mtime":1617653954166,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"iege1j",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":19,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\index.js",[],["218","219"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\reportWebVitals.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\App.js",["220","221","222"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport BodyUser from './components/UserPage/LandingPage/Body'\r\n\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {fetchUser,dispatchGetUser,dispatchLogin} from './redux/actions/authAction'\r\nimport {fetchAllUsers,dispatchGetAllUser} from './redux/actions/allUserAction'\r\nimport AdminPage from './components/AdminPage/AdminPage'\r\n\r\n\r\nfunction App() {\r\n//const \r\nconst dispatch = useDispatch()\r\nconst token = useSelector(state => state.token)\r\nconst auth = useSelector(state => state.auth)\r\nconst {isLogged,isAdmin} = auth\r\n\r\n\r\nconst getToken = async()=>{\r\n  const res = await axios.post('/user/refresh_token',null)\r\n  dispatch({type:'GET_TOKEN',payload: res.data.access_token})\r\n}\r\n\r\nconst getUser = async() =>{\r\n  return fetchUser(token).then(res =>{\r\n    dispatch(dispatchGetUser(res))\r\n  })\r\n}\r\n\r\n\r\n//effect\r\nuseEffect(()=>{\r\n  const firstLogin = localStorage.getItem('firstLogin')\r\n  if(firstLogin){\r\n    getToken()\r\n    dispatch(dispatchLogin())\r\n  }\r\n},[isLogged])\r\n\r\nuseEffect(()=>{\r\n  if(token) getUser()\r\n},[token])\r\n\r\nuseEffect(()=>{\r\n  if(isAdmin){\r\n    fetchAllUsers(token,auth).then(res =>{\r\n      dispatch(dispatchGetAllUser(res))\r\n    })\r\n  }\r\n},[isAdmin])\r\n\r\n\r\n//render\r\n  return (\r\n    <div>\r\n      <Router>\r\n        {\r\n          isAdmin?<div className=\"body-admin\">\r\n          <div>\r\n            <AdminPage/>\r\n          </div>\r\n        </div>\r\n          :\r\n          <div>\r\n              <BodyUser/>\r\n          </div>\r\n        }\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\store.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\allUserAction.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\authAction.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\AdminPage.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\index.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Header.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Body.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\index.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\userReducer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\authReducer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\tokenReducer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\LeftMenu.js",["223"],"import React, {useState} from 'react'\r\n\r\nimport { Menu,Button} from 'antd';\r\nimport {\r\n  AppstoreOutlined,\r\n  HomeOutlined,\r\n  HeartOutlined,\r\n  FastForwardOutlined,\r\n  MenuOutlined,\r\n} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction LeftMenu() {\r\n\r\n  const [collapsed, setcollapsed] = useState(true)\r\n\r\n    return (\r\n\r\n      <div className='left-menu'>\r\n            <Button\r\n                onClick={()=>{setcollapsed (!collapsed)}}\r\n                style={{width:'100%'}}>\r\n                < MenuOutlined/>\r\n            </Button>\r\n      <div>\r\n          <Menu\r\n            defaultSelectedKeys={['home']}\r\n            mode=\"inline\"\r\n            theme=\"light\"\r\n            inlineCollapsed = {collapsed}\r\n          >\r\n            <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n            <a href='/'>Home</a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"favorite\" icon={<HeartOutlined />}>\r\n            <a href=\"/favorite\">Favorite</a>\r\n            </Menu.Item>\r\n            <SubMenu key=\"In Theaters\" icon={<AppstoreOutlined />} title=\"In Theaters\">\r\n              <Menu.Item key=\"up-comming\">\r\n              <a href=\"/intheaters/sap-chieu\">Up Comming</a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"now-playing\">\r\n              <a href=\"/intheaters/dang-chieu\">Now Playing</a>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n      </div>\r\n    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LeftMenu\r\n",["224","225"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Footer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\LeftMenu.js",["226","227","228","229","230"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport { Menu} from 'antd';\r\nimport {PoweroffOutlined,\r\n    VideoCameraOutlined,\r\n    FundOutlined,\r\n    FundViewOutlined,\r\n    UserOutlined,\r\n    ForwardOutlined\r\n} from '@ant-design/icons';\r\n\r\nfunction LeftMenu() {\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n    const handleLogout = async() =>{\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href='/';\r\n        } catch (error) {\r\n            window.location.href='/';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu style={{height:\"100vh\"}} theme=\"dark\" mode=\"inline\">\r\n                    <div className='user-Admin'>{user.name}</div>\r\n                    <Menu.Item key=\"account\" icon={<UserOutlined />}><a href='/account'/>Account</Menu.Item>\r\n                    <Menu.Item key=\"movies\" icon={<VideoCameraOutlined />}><a href='/movies'/>Movies</Menu.Item>\r\n                    <Menu.Item key=\"news\" icon={<FundOutlined />}><a href='/news'/>News</Menu.Item>\r\n                    <Menu.Item key=\"Review\" icon={<ForwardOutlined />}><a href='/review'/>Review</Menu.Item>\r\n                    <Menu.Item key=\"advertisement\" icon={<FundViewOutlined />}><a href='/advertisement'/>Advertisement</Menu.Item>\r\n                <Menu.Item onClick={handleLogout} key=\"logout\" icon={<PoweroffOutlined />}>\r\n                    Logout\r\n                    </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftMenu\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\Body.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Login.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Notfound.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ActiveEmail.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Register.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Successfully.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ForgotPw.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Test.js",[],["231","232"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersDetail.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Profile.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Home.js",["233","234","235","236","237","238","239","240"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\News\\NewsPage.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\functionCheck.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Account.js",["241","242","243","244","245"],"import React ,{useState,useEffect}from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { Table,Typography,message,Drawer,Modal,Input ,Button} from 'antd';\r\nimport { EyeOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport {fetchAllUsers,dispatchGetAllUser} from '../../../redux/actions/allUserAction'\r\nimport Information from './commons/Information'\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    email:'',\r\n    name:'',\r\n    avatar:'',\r\n}\r\n\r\nfunction Account() {\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n        \r\n    const [visible, setvisible] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const users = useSelector(state => state.users)\r\n    const [userView, setuserView] = useState(users)\r\n    const [userInfor, setuserInfor] = useState(initialState)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [searching, setsearching] = useState(0)\r\n     //const \r\n     const columns = [\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n    \r\n      const handleSearch = (e) =>{\r\n        if(e.target.value==='')\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        users.forEach(element => {\r\n            if(element.name.toLowerCase().search(e.target.value) != -1 || element.email.toLowerCase().search(e.target.value) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setuserView(count)\r\n      }\r\n\r\n      const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/user/delete/${userInfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + userInfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchAllUsers(token).then(res =>{\r\n            dispatch(dispatchGetAllUser(res))\r\n          })\r\n      },[dispatch,token])\r\n      \r\n\r\n    //render\r\n    return (\r\n        <div className='body-container' >\r\n            <h2><Text underline>User Manager</Text></h2>\r\n            <div style={{width:\"300px\",float:'right',display:'flex'}}>\r\n              <Input size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n            </div>\r\n            <Table columns={columns}  scroll={{ y: 450 }} pagination={{ pageSize: users.length }} dataSource={searching==0?users:userView}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                  onClick: event => {setuserInfor(searching==0?users[rowIndex]:userView[rowIndex])}, // click row\r\n                };\r\n              }}\r\n            />\r\n\r\n            <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information account infor ={userInfor} />\r\n            </Drawer>\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete}>\r\n                <p>Delete User?</p>\r\n            </Modal>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Advertisement.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js",["246"],"import React ,{useState,useEffect}from 'react'\r\nimport { Row, Col,Input,Button ,Modal} from 'antd';\r\nimport axios from 'axios'\r\nimport InformationMovie from './InformationMovie'\r\nimport MovieCard from './MovieCard'\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nfunction AddNewMovie() {\r\n    //const\r\n    const [Movies, setMovies] = useState([])\r\n    const [search, setsearch] = useState(false)\r\n    const [visible, setvisible] = useState(false)\r\n\r\n    //Effect\r\n    useEffect(() => {\r\n        if(search== false)\r\n            fetcMovies()\r\n    },[search])\r\n\r\n    const fetcMovies = async () =>{\r\n        try {\r\n            const res = await axios.post('/movie/fetchMovieTheaters', {url:'https://moveek.com/sap-chieu/'})\r\n            setMovies(res.data.movies)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    const handleSearch = async(props) =>{\r\n        if(!props){\r\n            return\r\n        }\r\n        setsearch(true)\r\n        const escapedValue = encodeURIComponent(props).replace('%20','+');\r\n            try {\r\n                const res = await axios.get('/movie/searchTheaters', {headers:{q:escapedValue}})\r\n                setMovies(res.data.movies)\r\n            } catch (err) {\r\n               return err.response.data.msg\r\n            }\r\n\r\n    }\r\n\r\n    const handleChange = async(props) =>{\r\n        if(props.target.value === \"\"){\r\n            setsearch(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className= 'AddNewMovie'>\r\n            <div style={{margin:'auto',padding:'10px'}}>\r\n                <Search style={{width:'50%'}}\r\n                    placeholder=\"Name Movie\"\r\n                    allowClear\r\n                    enterButton=\"Search\"\r\n                    size=\"large\"\r\n                    onSearch={handleSearch}\r\n                    onChange={handleChange}\r\n                    />\r\n                    <Button style={{float:'right'}} onClick={handleAdd}>Custom</Button>\r\n            </div>\r\n\r\n            <div className='movie-search'>\r\n            <Row gutter={[8, 16]}>\r\n                {Movies && Movies.map((movie, index) => (\r\n                                <React.Fragment key={index}>\r\n                                     <Col span={4} >\r\n                                        <div>\r\n                                            <MovieCard movie={movie}/>\r\n                                        </div>\r\n                                     </Col>\r\n                                </React.Fragment>\r\n                            ))}\r\n            </Row>\r\n            </div>\r\n            <Modal title=\"Basic Modal\" visible={visible} onOk={handleAdd} onCancel={handleAdd}>\r\n                <InformationMovie custom/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewMovie\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\News.js",["247","248","249","250","251","252","253","254","255"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Table,Modal,message,Input,Button} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport { DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { Text} = Typography;\r\n\r\nfunction News() {\r\n\r\n     //const\r\n     const writer = useSelector(state => state.auth.user._id)\r\n     const [listNews, setlistNews] = useState([])\r\n     const [results, setresults] = useState([])\r\n     const token = useSelector(state => state.token)\r\n     const [view, setview] = useState([])\r\n     const [isModalVisible, setIsModalVisible] = useState(false);\r\n     const [searching, setsearching] = useState(0)\r\n     const [newsclick, setnewsclick] = useState()\r\n     const [viewinfor, setviewinfor] = useState()\r\n     const [visible, setvisible] = useState(false)\r\n     const [addnew, setaddnew] = useState(false)\r\n\r\n     const handleEdit =() =>{\r\n        setvisible (!visible)\r\n            if(visible) setaddnew(false)\r\n\r\n    }\r\n\r\n\r\n    const ColumnsList = [\r\n        {\r\n            dataIndex: 'img',\r\n            width:\"120px\",\r\n            render: result =><img src={result}/> \r\n          },\r\n        {\r\n          dataIndex: '',\r\n          width:\"75%\",\r\n          render: result =><div><a style={{color:'black'}} href={result.description}>{result.description}</a>\r\n          \r\n            <div style={{color:'gray'}}>{result.source} - {result.time} </div>\r\n          </div>\r\n\r\n        },\r\n\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                   <Button onClick={Addnew}>Add</Button>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'description',\r\n          dataIndex: 'description',\r\n          width:\"25%\",\r\n        },\r\n\r\n        {\r\n            title: 'Infomation',\r\n            children: [\r\n              {\r\n                title: 'source',\r\n                dataIndex: 'source',\r\n                key: 'source',\r\n              },\r\n              {\r\n                title: 'time',\r\n                dataIndex: 'time',\r\n                key:\"time\",\r\n              },\r\n              {\r\n                title: 'Writer',\r\n                dataIndex: 'WriterId',\r\n                key:'total_seats',\r\n               render: result =><div>{result.name}</div>\r\n              },\r\n              {\r\n                title: 'Original link',\r\n                dataIndex: 'link',\r\n                key:'Original_link',\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            title: 'img',\r\n            dataIndex: 'img',\r\n            render: result =><img src={result}/> \r\n          },\r\n\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                    <Button icon={<DeleteOutlined/>} onClick={Deletehandle}>Delete</Button>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n      useEffect(() => {\r\n        News_eff()\r\n        Get_News_eff()\r\n    }, [])\r\n\r\n    const News_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/news/get_allnews')\r\n            setresults(res.data.news)\r\n        }catch (error) {\r\n            message.error(error.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const Get_News_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/news/getnews')\r\n            setlistNews(res.data.news)\r\n        }catch (error) {\r\n            message.error(error.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const Addnew = async () =>{\r\n        \r\n        try {\r\n            const res = await axios.post(`/news/addnews`,{WriterId:writer,description:newsclick.description,link:newsclick.link,source:newsclick.source,time:newsclick.time,img:newsclick.img   },\r\n            {headers:{Authorization:token}\r\n            })\r\n            message.success(res.data.msg)\r\n            localStorage.setItem('updatePage',true)\r\n            News_eff();\r\n        } catch (error) {\r\n            message.warning('add fail!')\r\n        }\r\n    }\r\n\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        results.forEach(element => {\r\n            if(element.WriterId.name.toLowerCase().search(str) != -1\r\n            ||element.description.toLowerCase().search(str) != -1\r\n            ||element.source.toLowerCase().search(str) != -1\r\n            ){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setview(count);\r\n      }\r\n\r\n\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/news/deletenews/${viewinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + viewinfor.name, 0);\r\n            setTimeout(hide, 2500);\r\n            News_eff();\r\n        } catch (error) {\r\n            message.error(error.response.data.msg)\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n                <h2><Text underline>News Manager</Text></h2>\r\n                    <Input style={{width:\"30%\",float:'right'}} size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n                <Table bordered={true} columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: results.length }} dataSource={searching==0?results:view}\r\n                    onRow={(record, rowIndex) => {\r\n                        return {\r\n                            onClick: event => {setviewinfor(searching==0?results[rowIndex]:view[rowIndex])}, // click row\r\n                            onContextMenu: event => {}, // right button click row\r\n                        };\r\n                    }}\r\n                    />\r\n\r\n                    {/* information */}\r\n                    <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                        <p>Delete News?</p>\r\n                    </Modal>\r\n\r\n            </div>\r\n            <div>\r\n            <h2 style={{textAlign:'center'}}><Text>Add News</Text></h2>\r\n            <Table bordered={true} columns={ColumnsList} scroll={{ y: 450 }} pagination={{ pageSize: listNews.length }} dataSource={listNews} \r\n                    onRow={(record, rowIndex) => {\r\n                        return {\r\n                            onClick: event => {setnewsclick(listNews[rowIndex])}, // click row\r\n                            onContextMenu: event => {}, // right button click row\r\n                        };\r\n                    }}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Movie.js",["256","257","258","259"],"import React,{useState,useEffect} from 'react'\r\nimport {Typography,Drawer,Table,Modal,message,Input,Button} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\nimport { EyeOutlined,DeleteOutlined,UserOutlined} from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport Information from './commons/Information'\r\nimport AddNewMovie from './commons/AddNewMovie'\r\n\r\nconst { Text} = Typography;\r\nconst initialState = {\r\n    original_title:'',\r\n    overview:'',\r\n    poster_path:'',\r\n    backdrop_path:'',\r\n    _id:'',\r\n    directors:[],\r\n    actors:[],\r\n    trailer:'',\r\n}\r\n\r\nfunction Movie() {\r\n    \r\n    //const\r\n    const [Movies, setMovies] = useState([])\r\n    const [moviesView, setmoviesView] = useState(Movies)\r\n    const [movieinfor, setmovieinfor] = useState(initialState)\r\n    const [visible, setvisible] = useState(false)\r\n    const token = useSelector(state => state.token)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [searching, setsearching] = useState(0)\r\n    const handleEdit =() =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: '_Id',\r\n          dataIndex: '_id',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'original_title',\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            key: \"x\",\r\n            render: () =>\r\n                <div>\r\n                     <EyeOutlined onClick={handleEdit} />&nbsp;&nbsp;&nbsp;&nbsp;<DeleteOutlined onClick={Deletehandle}/>\r\n                </div>\r\n          },\r\n      ];\r\n\r\n\r\n    useEffect(() => {\r\n        movies_eff()\r\n    }, [])\r\n\r\n    const movies_eff = async() =>{\r\n        try{\r\n            const res = await axios.get('/movie/getallmovie')\r\n            setMovies(res.data.movie)\r\n        }catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const Deletehandle = () =>{\r\n        setIsModalVisible(true)\r\n      }\r\n\r\n    const handleOkDelete = async () => {\r\n        try {\r\n            await axios.delete(`/movie/delete/${movieinfor._id}`,{\r\n                headers:{Authorization:token}\r\n            })\r\n            localStorage.setItem('updatePage',true)\r\n            const hide = message.loading('Delete... ' + movieinfor.original_title, 0);\r\n            setTimeout(hide, 2500);\r\n            movies_eff();\r\n        } catch (error) {\r\n            return;\r\n        }\r\n        setIsModalVisible(false)\r\n    };\r\n    const handleCancelDelete = () => {\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleSearch = (e) =>{\r\n        const str = e.target.value;\r\n        if(str===\"\")\r\n            setsearching(0)\r\n        else setsearching(1)\r\n        var count=[];\r\n        Movies.forEach(element => {\r\n            if(element.title.toLowerCase().search(str) != -1){\r\n                count.push(element);\r\n            }\r\n        });\r\n        setmoviesView(count);\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='body-container'>\r\n           <h2><Text underline>Movies Manager</Text></h2>\r\n           <div style={{width:\"300px\",float:'right',display:'flex'}}>\r\n              <Input size=\"large\" placeholder=\"Search\" prefix={<UserOutlined />} onChange={handleSearch}/>\r\n            </div>\r\n           <Table columns={columns} scroll={{ y: 450 }} pagination={{ pageSize: Movies.length }} dataSource={searching==0?Movies:moviesView}\r\n            onRow={(record, rowIndex) => {\r\n                return {\r\n                    onClick: event => {setmovieinfor(searching==0?Movies[rowIndex]:moviesView[rowIndex])}, // click row\r\n                };\r\n              }}\r\n            />\r\n\r\n            {/* information */}\r\n           <Drawer\r\n                width={'50%'}\r\n                title=\"Information\"\r\n                placement=\"right\"\r\n                visible={visible}\r\n                onClose={handleEdit}\r\n                >\r\n                <Information movie infor= {movieinfor}/>\r\n            </Drawer>\r\n\r\n            <Modal title=\"confirm deletion\" visible={isModalVisible} onOk={handleOkDelete} onCancel={handleCancelDelete} >\r\n                <p>Delete Movie?</p>\r\n            </Modal>\r\n\r\n            </div>\r\n            <div className=\"new-movie\">\r\n                <AddNewMovie/>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\Config.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport moment   from 'moment';\r\nimport {Skeleton,Form,Input,List,DatePicker,InputNumber,Button,message} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport './commons.css'\r\nimport ReactPlayer from 'react-player/youtube'\r\nconst { TextArea } = Input;\r\n\r\nfunction InformationMovie(props) {\r\n    const {data, custom} = props\r\n    const token = useSelector(state => state.token)\r\n    const [movie, setmovie] = useState()\r\n    const dateFormat = 'DD/MM/YYYY';\r\n    const [posterImg, setposterImg] = useState('')\r\n    const [bannerImg, setbannerImg] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(!custom)\r\n            fetcMovies(data)\r\n    }, [data])\r\n\r\n    const fetcMovies = async(data) => {\r\n        try {\r\n            const res = await axios.get('/movie/fetchMovieDetailTheaters',{headers:{url:data.linkmovie}})\r\n            setmovie(res.data.movie)\r\n            console.log(res.data.movie)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n       \r\n    }\r\n    const formItemLayoutWithOutLabel = {\r\n        wrapperCol: {\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 20, offset: 4 },\r\n        },\r\n      };\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 14 },\r\n      };\r\n\r\n\r\n    \r\n    const uploadButton = (\r\n        <div>\r\n          <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    const Loading = (\r\n        <div>\r\n            <Skeleton.Image active={true} /> \r\n            <Skeleton active={true}/> \r\n        </div>\r\n    );\r\n    \r\n    const onFinish = async(e) =>{\r\n        try{\r\n            const mov={\r\n                title:e.title,\r\n                backdrop_path:bannerImg?bannerImg:movie.backdrop_path,\r\n                directors:e.directors,\r\n                actors:e.actors,\r\n                original_title:e.original_title,\r\n                overview:e.overview,\r\n                poster_path:posterImg?posterImg:movie.poster_path,\r\n                release_date:e.release_date,\r\n                run_time:e.run_time,\r\n                trailer:e.trailer,\r\n            }\r\n            \r\n            const res = await axios.post('/movie/addmovie/',{movie:mov},\r\n                {headers:{Authorization:token}\r\n            })\r\n            message.success(res.data.msg)\r\n\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n\r\n    const onCustom = async(e) =>{\r\n        try{\r\n            const movie={\r\n                title:e.title,\r\n                backdrop_path:bannerImg,\r\n                directors:e.directors,\r\n                actors:e.actors,\r\n                original_title:e.original_title,\r\n                overview:e.overview,\r\n                poster_path:posterImg,\r\n                release_date:e.release_date,\r\n                run_time:e.run_time,\r\n                trailer:e.trailer,\r\n            }\r\n\r\n            const res = await axios.post('/movie/addmovie/',{movie:movie},\r\n                {headers:{Authorization:token}\r\n            })\r\n\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n      \r\n    const upImage = async(e) =>{\r\n        e.preventDefault();\r\n        try {\r\n            const file = e.target.files[0]\r\n           if(!file) return console.error('No files were uploaded.');\r\n           if(file.type !== 'image/jpeg' && file.type !== 'image/png') return console.error('file format incorrect.');\r\n\r\n           let formData = new FormData()\r\n           formData.append('file',file)\r\n           const res = await axios.post('/api/uploadimg',formData,{\r\n               headers:{'content-type':'multipart/form-data',Authorization:token}\r\n           })\r\n\r\n           if(e.target.id==\"poster\"){\r\n                setposterImg(res.data.url)\r\n           }\r\n           if(e.target.id==\"banner\"){\r\n                setbannerImg(res.data.url)\r\n          }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    if(custom)\r\n    {\r\n        return (\r\n            <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onCustom}\r\n                        initialValues={{\r\n                            ['run-time']: 1,\r\n                            ['original_title']:\"\",\r\n                            ['title']:\"\",\r\n                            ['overview']:\"\",\r\n                            ['release_date']:\"\",\r\n                            ['backdrop_path']:\"\",\r\n                            ['directors']:\"\",\r\n                            ['actors']:\"\",\r\n                            ['trailer']:\"\",\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run_time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.List\r\n                                name=\"actors\"\r\n                                rules={[\r\n                                {\r\n                                    validator: async (_, actors) => {\r\n                                    if (!actors || actors.length < 1) {\r\n                                        return Promise.reject(new Error('At least 1 actors'));\r\n                                    }\r\n                                    },\r\n                                },\r\n                                ]}\r\n                            >\r\n                                {(fields, { add, remove }, { errors }) => (\r\n                                <>\r\n                                    {fields.map((field, index) => (\r\n                                    <Form.Item\r\n                                        {...formItemLayoutWithOutLabel}\r\n                                        label='Actors'\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    >\r\n                                        <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input Actors name or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                        >\r\n                                        <Input placeholder=\"Actors name\" style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n                                        {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                        ) : null}\r\n                                    </Form.Item>\r\n                                    ))}\r\n                                    <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: '60%' }}\r\n                                        icon={<PlusOutlined />}\r\n                                    >\r\n                                        Add Actors\r\n                                    </Button>\r\n                                    <Form.ErrorList errors={errors} />\r\n                                    </Form.Item>\r\n                                </>\r\n                                )}\r\n                            </Form.List>\r\n\r\n                            <Form.List\r\n                                name=\"directors\"\r\n                                rules={[\r\n                                {\r\n                                    validator: async (_, directors) => {\r\n                                    if (!directors || directors.length < 1) {\r\n                                        return Promise.reject(new Error('At least 1 directors'));\r\n                                    }\r\n                                    },\r\n                                },\r\n                                ]}\r\n                            >\r\n                                {(fields, { add, remove }, { errors }) => (\r\n                                <>\r\n                                    {fields.map((field, index) => (\r\n                                    <Form.Item\r\n                                        {...formItemLayoutWithOutLabel}\r\n                                        label='Directors'\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    >\r\n                                        <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input Actors name or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                        >\r\n                                        <Input placeholder=\"directors name\" style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n                                        {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                        ) : null}\r\n                                    </Form.Item>\r\n                                    ))}\r\n                                    <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: '60%' }}\r\n                                        icon={<PlusOutlined />}\r\n                                    >\r\n                                        Add Directors\r\n                                    </Button>\r\n                                    <Form.ErrorList errors={errors} />\r\n                                    </Form.Item>\r\n                                </>\r\n                                )}\r\n                            </Form.List>\r\n\r\n\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                            <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img style={{height:\"300px\"}} alt=\"poster\" src={posterImg}/>\r\n                                <Input type='file' id='poster' onChange={upImage}/>\r\n                            \r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <Input/>\r\n                            </Form.Item>\r\n\r\n\r\n                        <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img style={{width:\"100%\"}} alt=\"banner\" src={bannerImg}/>\r\n                            <input type='file' id='banner' onChange={upImage}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n\r\n                </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div> \r\n            {movie?\r\n                <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            ['run_time']: movie.runtime?movie.runtime:1,\r\n                            ['original_title']:movie.original_title,\r\n                            ['title']:movie.title,\r\n                            ['overview']:movie.overview,\r\n                            ['release_date']:moment(movie.release_date,dateFormat),\r\n                            ['backdrop_path']:movie.backdrop_path,\r\n                            ['poster_path']:movie.poster_path,\r\n                            ['directors']:movie.directors,\r\n                            ['actors']:movie.actors,\r\n                            ['trailer']:movie.trailer,\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run_time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"directors\" label=\"Directors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                            size=\"small\"\r\n                            bordered\r\n                            dataSource={movie.directors}\r\n                            renderItem={item => <List.Item>{item}</List.Item>}\r\n                            />\r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item name=\"actors\" label=\"Actors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                                size=\"small\"\r\n                                bordered\r\n                                dataSource={movie.actors}\r\n                                renderItem={item => <List.Item>{item}</List.Item>}\r\n                                />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img style={{height:\"300px\"}} alt=\"poster\" src={posterImg?posterImg:movie.poster_path}/>\r\n                                <Input type='file' id='poster' onChange={upImage}/>\r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <ReactPlayer width=\"100%\" height=\"100%\" url={movie.trailer} />\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img style={{width:\"100%\"}} alt=\"banner\" src={bannerImg?bannerImg:movie.backdrop_path}/>\r\n                            <input type='file' id='banner' onChange={upImage}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n                </div>\r\n                :<div>{Loading}</div>\r\n            }\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n// }\r\n\r\nexport default InformationMovie\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js",["284","285"],"import React,{useState} from 'react'\r\nimport {Button,Modal} from 'antd';\r\nimport InformationMovie from './InformationMovie'\r\n\r\nfunction MovieCard(props) {\r\n    \r\n    const {movie} = props\r\n    const [visible, setvisible] = useState(false)\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    return (\r\n        <div className='search-detail'>\r\n            <img style={{width:'180px'}} src={movie.poster_path} onClick={handleAdd}/>\r\n            <div style={{color:'black'}}>{movie.title}</div>\r\n            <Modal\r\n                height='70%'\r\n                width=\"80%\"\r\n                title=\"Add new movies\"\r\n                placement=\"top\"\r\n                visible={visible}\r\n                title=\"Information Movie\"\r\n                closable={false}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={()=>{setvisible (false)}}>\r\n                      Close\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                <InformationMovie data = {movie}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\Information.js",["286","287","288"],"import React ,{useState}from 'react'\r\nimport { Form,Button,Input,message,DatePicker} from 'antd';\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction Information(props) {\r\n\r\n    const token = useSelector(state => state.token)\r\n    const [check, setcheck] = useState(false)\r\n    const infor = props.infor\r\n    const layout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 24 },\r\n      };\r\n      const dateFormat = 'YYYY/MM/DD';\r\n\r\n    const OnEditMovie =  async (values) =>{\r\n\r\n        var {original_title,release_date,overview,trailer} = values\r\n        original_title = !original_title?infor.original_title : original_title\r\n        release_date = !release_date?infor.release_date : release_date\r\n        overview = !overview?infor.overview : overview\r\n        trailer = !trailer?infor.trailer : trailer\r\n\r\n        var premiere\r\n        if(check === true)\r\n        {\r\n            await axios.post('/movie/updatemovie',{id:infor._id,premiere:-1,original_title,release_date,overview,trailer},{headers:{Authorization:token}})\r\n        }\r\n        if(check === false)\r\n            await axios.post('/movie/updatemovie',{id:infor._id,original_title,release_date,overview,trailer},{headers:{Authorization:token}})\r\n        message.success('change information successfully')\r\n    }\r\n\r\n    const handleChange = (e) =>{\r\n        setcheck(e.target.checked)\r\n    }\r\n\r\n\r\n    \r\n    // acount\r\n    if(props.account){\r\n        return (\r\n            <div className='information-user'>\r\n                <div className= 'left-infor'>\r\n                    <img alt='avatar' src={infor.avatar}/><br/>\r\n                </div>\r\n                <div>\r\n                    <Form name=\"information\"> \r\n                        <Form.Item label=\"_Id\">\r\n                            {infor._id}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Email\">\r\n                            {infor.email}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Name\">\r\n                            {infor.name}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Type Account\">\r\n                            {infor.role=== 1?<div>Admin Account</div>:<div>User Account</div>}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Date Create\">\r\n                            {infor.createdAt}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        if(props.movie)\r\n        {\r\n            return (\r\n                <div>\r\n                    <Form name=\"information\"  {...layout}  onFinish={OnEditMovie}\r\n            \r\n                    > \r\n                            <Form.Item label=\"background\">\r\n                                <img src={infor.backdrop_path}style={{top:'0',left:'0',width:'80%'}}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Poster\">\r\n                                <img src={infor.poster_path} style={{top:'0',left:'0',height:'500px'}}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Original title\" name=\"original_title\">\r\n                                <Input placeholder={infor.original_title}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"overview\" name=\"overview\">\r\n                                <TextArea  rows={4} placeholder={infor.overview}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Release date\" name=\"release_date\">\r\n                                <DatePicker format={dateFormat} placeholder={infor.release_date}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"trailer\" name=\"trailer\">\r\n                                <Input placeholder={infor.trailer}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"old movies\" name=\"old\">\r\n                                <Checkbox onChange={handleChange}/>\r\n                            </Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Form>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default Information\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\MovieDetail.js",["289","290","291","292","293","294","295","296"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Totalmovie.js",["297","298"],"import React,{useState,useEffect}from 'react'\r\nimport {Row,Col} from 'antd';\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Totalmovie(props) {\r\n    const key = props.match.params.key\r\n    const [results, setresults] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[key])\r\n\r\n    const fetchData = async () =>{\r\n        try {\r\n            var res\r\n            if(key === 'playing_now')\r\n                res = await axios.get(`/movie/getplaynow/`)\r\n            if(key === 'comingsoon')\r\n                res = await axios.get(`/movie/getcomingsoon/`)\r\n            setresults(res.data.movie)\r\n        } catch (err) {\r\n           return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2>{key==='playing_now'?'Playing Now' : 'Coming soon'}</h2>\r\n            <div className='list-movies'>\r\n                <Row gutter={[8, 8]}>\r\n                        {results && results.map((movie, index) => (\r\n                            <React.Fragment key={index}>\r\n                               <Col span={6} >\r\n                                   <div className='card-movie'>\r\n                                       <label>{movie.episode}</label>\r\n                                        <a href=''>\r\n                                            <img alt ='poster' src={movie.poster_path}/>\r\n                                            <div className='movie-infor'>\r\n                                                {movie.title}<p/>\r\n                                                Khởi chiếu: {movie.date}\r\n                                                </div>\r\n                                        </a>\r\n                                   </div>\r\n                                    \r\n                                    \r\n                                </Col>\r\n                                \r\n                            </React.Fragment>\r\n                                \r\n                        ))}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Totalmovie\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\Comments.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\LikeDislikes.js",["299","300","301","302"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction LikeDislikes(props) {\r\n    const user = useSelector(state => state.auth.user)\r\n    const isLogged = useSelector(state => state.auth.isLogged)\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(variable)\r\n        Axios.post('/like/getLikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post('/like/getDislikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n       \r\n        if (!isLogged) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        if (LikeAction === null) {\r\n\r\n            Axios.post('/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //If dislike button is already clicked\r\n\r\n                        if (DislikeAction !== null) {\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        alert('Failed to increase the like')\r\n                    }\r\n                })\r\n\r\n\r\n        } else {\r\n\r\n            Axios.post('/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease the like')\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onDisLike = () => {\r\n\r\n        if (!isLogged) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        if (DislikeAction !== null) {\r\n\r\n            Axios.post('/like/unDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n\r\n            Axios.post('/like/upDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //If dislike button is already clicked\r\n                        if(LikeAction !== null ) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike} />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon\r\n                        type=\"dislike\"\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\ReplyComment.js",["303"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\SingleComment.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Review.js",["304","305","306","307","308","309","310","311","312"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationReview.js",["313","314","315","316","317","318","319","320","321","322","323","324"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\header2.js",["325"],{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":39,"column":3,"nodeType":"332","endLine":39,"endColumn":13,"suggestions":"333"},{"ruleId":"330","severity":1,"message":"334","line":43,"column":3,"nodeType":"332","endLine":43,"endColumn":10,"suggestions":"335"},{"ruleId":"330","severity":1,"message":"336","line":51,"column":3,"nodeType":"332","endLine":51,"endColumn":12,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":8,"column":3,"nodeType":"340","messageId":"341","endLine":8,"endColumn":22},{"ruleId":"326","replacedBy":"342"},{"ruleId":"328","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":30,"column":70,"nodeType":"346","endLine":30,"endColumn":90},{"ruleId":"344","severity":1,"message":"345","line":31,"column":76,"nodeType":"346","endLine":31,"endColumn":95},{"ruleId":"344","severity":1,"message":"345","line":32,"column":67,"nodeType":"346","endLine":32,"endColumn":84},{"ruleId":"344","severity":1,"message":"345","line":33,"column":72,"nodeType":"346","endLine":33,"endColumn":91},{"ruleId":"344","severity":1,"message":"345","line":34,"column":80,"nodeType":"346","endLine":34,"endColumn":106},{"ruleId":"326","replacedBy":"347"},{"ruleId":"328","replacedBy":"348"},{"ruleId":"349","severity":1,"message":"350","line":62,"column":63,"nodeType":"351","messageId":"352","endLine":62,"endColumn":65},{"ruleId":"349","severity":1,"message":"350","line":78,"column":59,"nodeType":"351","messageId":"352","endLine":78,"endColumn":61},{"ruleId":"349","severity":1,"message":"350","line":101,"column":67,"nodeType":"351","messageId":"352","endLine":101,"endColumn":69},{"ruleId":"349","severity":1,"message":"350","line":117,"column":63,"nodeType":"351","messageId":"352","endLine":117,"endColumn":65},{"ruleId":"349","severity":1,"message":"350","line":134,"column":63,"nodeType":"351","messageId":"352","endLine":134,"endColumn":65},{"ruleId":"349","severity":1,"message":"350","line":150,"column":63,"nodeType":"351","messageId":"352","endLine":150,"endColumn":65},{"ruleId":"353","severity":1,"message":"354","line":207,"column":46,"nodeType":"346","endLine":207,"endColumn":72},{"ruleId":"353","severity":1,"message":"354","line":225,"column":46,"nodeType":"346","endLine":225,"endColumn":67},{"ruleId":"338","severity":1,"message":"355","line":4,"column":55,"nodeType":"340","messageId":"341","endLine":4,"endColumn":61},{"ruleId":"349","severity":1,"message":"350","line":54,"column":66,"nodeType":"351","messageId":"352","endLine":54,"endColumn":68},{"ruleId":"349","severity":1,"message":"350","line":54,"column":126,"nodeType":"351","messageId":"352","endLine":54,"endColumn":128},{"ruleId":"349","severity":1,"message":"356","line":102,"column":120,"nodeType":"351","messageId":"352","endLine":102,"endColumn":122},{"ruleId":"349","severity":1,"message":"356","line":105,"column":60,"nodeType":"351","messageId":"352","endLine":105,"endColumn":62},{"ruleId":"349","severity":1,"message":"356","line":19,"column":18,"nodeType":"351","messageId":"352","endLine":19,"endColumn":20},{"ruleId":"338","severity":1,"message":"357","line":22,"column":13,"nodeType":"340","messageId":"341","endLine":22,"endColumn":19},{"ruleId":"338","severity":1,"message":"358","line":24,"column":12,"nodeType":"340","messageId":"341","endLine":24,"endColumn":22},{"ruleId":"353","severity":1,"message":"354","line":35,"column":30,"nodeType":"346","endLine":35,"endColumn":49},{"ruleId":"353","severity":1,"message":"354","line":96,"column":30,"nodeType":"346","endLine":96,"endColumn":49},{"ruleId":"349","severity":1,"message":"350","line":155,"column":64,"nodeType":"351","messageId":"352","endLine":155,"endColumn":66},{"ruleId":"349","severity":1,"message":"350","line":156,"column":61,"nodeType":"351","messageId":"352","endLine":156,"endColumn":63},{"ruleId":"349","severity":1,"message":"350","line":157,"column":56,"nodeType":"351","messageId":"352","endLine":157,"endColumn":58},{"ruleId":"349","severity":1,"message":"356","line":195,"column":141,"nodeType":"351","messageId":"352","endLine":195,"endColumn":143},{"ruleId":"349","severity":1,"message":"356","line":198,"column":70,"nodeType":"351","messageId":"352","endLine":198,"endColumn":72},{"ruleId":"338","severity":1,"message":"355","line":2,"column":53,"nodeType":"340","messageId":"341","endLine":2,"endColumn":59},{"ruleId":"349","severity":1,"message":"350","line":99,"column":56,"nodeType":"351","messageId":"352","endLine":99,"endColumn":58},{"ruleId":"349","severity":1,"message":"356","line":116,"column":119,"nodeType":"351","messageId":"352","endLine":116,"endColumn":121},{"ruleId":"349","severity":1,"message":"356","line":119,"column":63,"nodeType":"351","messageId":"352","endLine":119,"endColumn":65},{"ruleId":"330","severity":1,"message":"359","line":22,"column":8,"nodeType":"332","endLine":22,"endColumn":14,"suggestions":"360"},{"ruleId":"338","severity":1,"message":"361","line":48,"column":11,"nodeType":"340","messageId":"341","endLine":48,"endColumn":23},{"ruleId":"338","severity":1,"message":"362","line":101,"column":19,"nodeType":"340","messageId":"341","endLine":101,"endColumn":22},{"ruleId":"349","severity":1,"message":"356","line":123,"column":26,"nodeType":"351","messageId":"352","endLine":123,"endColumn":28},{"ruleId":"349","severity":1,"message":"356","line":126,"column":26,"nodeType":"351","messageId":"352","endLine":126,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":145,"column":29,"nodeType":"365","messageId":"366","endLine":145,"endColumn":44,"fix":"367"},{"ruleId":"363","severity":1,"message":"368","line":146,"column":29,"nodeType":"365","messageId":"366","endLine":146,"endColumn":50,"fix":"369"},{"ruleId":"363","severity":1,"message":"370","line":147,"column":29,"nodeType":"365","messageId":"366","endLine":147,"endColumn":41,"fix":"371"},{"ruleId":"363","severity":1,"message":"372","line":148,"column":29,"nodeType":"365","messageId":"366","endLine":148,"endColumn":44,"fix":"373"},{"ruleId":"363","severity":1,"message":"374","line":149,"column":29,"nodeType":"365","messageId":"366","endLine":149,"endColumn":48,"fix":"375"},{"ruleId":"363","severity":1,"message":"376","line":150,"column":29,"nodeType":"365","messageId":"366","endLine":150,"endColumn":49,"fix":"377"},{"ruleId":"363","severity":1,"message":"378","line":151,"column":29,"nodeType":"365","messageId":"366","endLine":151,"endColumn":45,"fix":"379"},{"ruleId":"363","severity":1,"message":"380","line":152,"column":29,"nodeType":"365","messageId":"366","endLine":152,"endColumn":42,"fix":"381"},{"ruleId":"363","severity":1,"message":"382","line":153,"column":29,"nodeType":"365","messageId":"366","endLine":153,"endColumn":43,"fix":"383"},{"ruleId":"363","severity":1,"message":"384","line":333,"column":29,"nodeType":"365","messageId":"366","endLine":333,"endColumn":72,"fix":"385"},{"ruleId":"363","severity":1,"message":"368","line":334,"column":29,"nodeType":"365","messageId":"366","endLine":334,"endColumn":68,"fix":"386"},{"ruleId":"363","severity":1,"message":"370","line":335,"column":29,"nodeType":"365","messageId":"366","endLine":335,"endColumn":50,"fix":"387"},{"ruleId":"363","severity":1,"message":"372","line":336,"column":29,"nodeType":"365","messageId":"366","endLine":336,"endColumn":56,"fix":"388"},{"ruleId":"363","severity":1,"message":"374","line":337,"column":29,"nodeType":"365","messageId":"366","endLine":337,"endColumn":83,"fix":"389"},{"ruleId":"363","severity":1,"message":"376","line":338,"column":29,"nodeType":"365","messageId":"366","endLine":338,"endColumn":66,"fix":"390"},{"ruleId":"363","severity":1,"message":"391","line":339,"column":29,"nodeType":"365","messageId":"366","endLine":339,"endColumn":62,"fix":"392"},{"ruleId":"363","severity":1,"message":"378","line":340,"column":29,"nodeType":"365","messageId":"366","endLine":340,"endColumn":58,"fix":"393"},{"ruleId":"363","severity":1,"message":"380","line":341,"column":29,"nodeType":"365","messageId":"366","endLine":341,"endColumn":52,"fix":"394"},{"ruleId":"363","severity":1,"message":"382","line":342,"column":29,"nodeType":"365","messageId":"366","endLine":342,"endColumn":54,"fix":"395"},{"ruleId":"353","severity":1,"message":"354","line":15,"column":13,"nodeType":"346","endLine":15,"endColumn":87},{"ruleId":"396","severity":1,"message":"397","line":23,"column":17,"nodeType":"398","endLine":23,"endColumn":42},{"ruleId":"338","severity":1,"message":"399","line":28,"column":13,"nodeType":"340","messageId":"341","endLine":28,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":83,"column":33,"nodeType":"346","endLine":83,"endColumn":103},{"ruleId":"353","severity":1,"message":"354","line":86,"column":33,"nodeType":"346","endLine":86,"endColumn":105},{"ruleId":"338","severity":1,"message":"400","line":12,"column":9,"nodeType":"340","messageId":"341","endLine":12,"endColumn":17},{"ruleId":"338","severity":1,"message":"401","line":21,"column":12,"nodeType":"340","messageId":"341","endLine":21,"endColumn":23},{"ruleId":"338","severity":1,"message":"402","line":21,"column":25,"nodeType":"340","messageId":"341","endLine":21,"endColumn":39},{"ruleId":"330","severity":1,"message":"403","line":25,"column":7,"nodeType":"332","endLine":25,"endColumn":9,"suggestions":"404"},{"ruleId":"349","severity":1,"message":"356","line":51,"column":26,"nodeType":"351","messageId":"352","endLine":51,"endColumn":28},{"ruleId":"349","severity":1,"message":"356","line":56,"column":26,"nodeType":"351","messageId":"352","endLine":56,"endColumn":28},{"ruleId":"353","severity":1,"message":"354","line":66,"column":17,"nodeType":"346","endLine":66,"endColumn":112},{"ruleId":"353","severity":1,"message":"354","line":68,"column":17,"nodeType":"346","endLine":68,"endColumn":49},{"ruleId":"330","severity":1,"message":"403","line":13,"column":7,"nodeType":"332","endLine":13,"endColumn":12,"suggestions":"405"},{"ruleId":"406","severity":1,"message":"407","line":40,"column":41,"nodeType":"346","endLine":40,"endColumn":52},{"ruleId":"338","severity":1,"message":"408","line":8,"column":11,"nodeType":"340","messageId":"341","endLine":8,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":36,"column":50,"nodeType":"411","messageId":"412","endLine":36,"endColumn":52},{"ruleId":"409","severity":1,"message":"410","line":53,"column":56,"nodeType":"411","messageId":"412","endLine":53,"endColumn":58},{"ruleId":"330","severity":1,"message":"413","line":63,"column":8,"nodeType":"332","endLine":63,"endColumn":10,"suggestions":"414"},{"ruleId":"409","severity":1,"message":"410","line":11,"column":42,"nodeType":"411","messageId":"412","endLine":11,"endColumn":44},{"ruleId":"338","severity":1,"message":"415","line":25,"column":12,"nodeType":"340","messageId":"341","endLine":25,"endColumn":19},{"ruleId":"330","severity":1,"message":"416","line":75,"column":8,"nodeType":"332","endLine":75,"endColumn":14,"suggestions":"417"},{"ruleId":"349","severity":1,"message":"350","line":103,"column":64,"nodeType":"351","messageId":"352","endLine":103,"endColumn":66},{"ruleId":"349","severity":1,"message":"350","line":104,"column":61,"nodeType":"351","messageId":"352","endLine":104,"endColumn":63},{"ruleId":"349","severity":1,"message":"350","line":105,"column":56,"nodeType":"351","messageId":"352","endLine":105,"endColumn":58},{"ruleId":"353","severity":1,"message":"354","line":142,"column":30,"nodeType":"346","endLine":142,"endColumn":73},{"ruleId":"406","severity":1,"message":"418","line":147,"column":33,"nodeType":"346","endLine":147,"endColumn":60},{"ruleId":"349","severity":1,"message":"356","line":190,"column":141,"nodeType":"351","messageId":"352","endLine":190,"endColumn":143},{"ruleId":"349","severity":1,"message":"356","line":193,"column":70,"nodeType":"351","messageId":"352","endLine":193,"endColumn":72},{"ruleId":"338","severity":1,"message":"419","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":14},{"ruleId":"338","severity":1,"message":"420","line":4,"column":29,"nodeType":"340","messageId":"341","endLine":4,"endColumn":33},{"ruleId":"338","severity":1,"message":"421","line":4,"column":34,"nodeType":"340","messageId":"341","endLine":4,"endColumn":44},{"ruleId":"338","severity":1,"message":"422","line":4,"column":45,"nodeType":"340","messageId":"341","endLine":4,"endColumn":56},{"ruleId":"338","severity":1,"message":"423","line":5,"column":10,"nodeType":"340","messageId":"341","endLine":5,"endColumn":29},{"ruleId":"338","severity":1,"message":"424","line":5,"column":31,"nodeType":"340","messageId":"341","endLine":5,"endColumn":43},{"ruleId":"338","severity":1,"message":"425","line":11,"column":11,"nodeType":"340","messageId":"341","endLine":11,"endColumn":16},{"ruleId":"330","severity":1,"message":"426","line":17,"column":8,"nodeType":"332","endLine":17,"endColumn":14,"suggestions":"427"},{"ruleId":"338","severity":1,"message":"428","line":29,"column":11,"nodeType":"340","messageId":"341","endLine":29,"endColumn":37},{"ruleId":"338","severity":1,"message":"361","line":43,"column":11,"nodeType":"340","messageId":"341","endLine":43,"endColumn":23},{"ruleId":"338","severity":1,"message":"429","line":66,"column":11,"nodeType":"340","messageId":"341","endLine":66,"endColumn":19},{"ruleId":"363","severity":1,"message":"430","line":118,"column":29,"nodeType":"365","messageId":"366","endLine":118,"endColumn":58,"fix":"431"},{"ruleId":"338","severity":1,"message":"432","line":8,"column":11,"nodeType":"340","messageId":"341","endLine":8,"endColumn":19},"no-native-reassign",["433"],"no-negated-in-lhs",["434"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getToken'. Either include them or remove the dependency array.","ArrayExpression",["435"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.",["437"],"no-unused-vars","'FastForwardOutlined' is defined but never used.","Identifier","unusedVar",["433"],["434"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["433"],["434"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","Expected '===' and instead saw '=='.","'addnew' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'custom'. Either include it or remove the dependency array.",["438"],"'uploadButton' is assigned a value but never used.","'res' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['run-time'] found.","Property","unnecessarilyComputedProperty",{"range":"439","text":"440"},"Unnecessarily computed property ['original_title'] found.",{"range":"441","text":"442"},"Unnecessarily computed property ['title'] found.",{"range":"443","text":"444"},"Unnecessarily computed property ['overview'] found.",{"range":"445","text":"446"},"Unnecessarily computed property ['release_date'] found.",{"range":"447","text":"448"},"Unnecessarily computed property ['backdrop_path'] found.",{"range":"449","text":"450"},"Unnecessarily computed property ['directors'] found.",{"range":"451","text":"452"},"Unnecessarily computed property ['actors'] found.",{"range":"453","text":"454"},"Unnecessarily computed property ['trailer'] found.",{"range":"455","text":"456"},"Unnecessarily computed property ['run_time'] found.",{"range":"457","text":"458"},{"range":"459","text":"442"},{"range":"460","text":"444"},{"range":"461","text":"446"},{"range":"462","text":"448"},{"range":"463","text":"450"},"Unnecessarily computed property ['poster_path'] found.",{"range":"464","text":"465"},{"range":"466","text":"452"},{"range":"467","text":"454"},{"range":"468","text":"456"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'premiere' is defined but never used.","'TextArea' is assigned a value but never used.","'viewComment' is assigned a value but never used.","'setviewComment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["469"],["470"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'user' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["471"],"'Loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Get_Reviews_eff'. Either include it or remove the dependency array.",["472"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'moment' is defined but never used.","'List' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'custom' and 'fetcData'. Either include them or remove the dependency array.",["473"],"'formItemLayoutWithOutLabel' is assigned a value but never used.","'onCustom' is assigned a value but never used.","Unnecessarily computed property ['description'] found.",{"range":"474","text":"475"},"'progress' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},[4405,4417],"'run-time'",[4451,4469],"'original_title'",[4503,4512],"'title'",[4546,4558],"'overview'",[4592,4608],"'release_date'",[4642,4659],"'backdrop_path'",[4693,4706],"'directors'",[4740,4750],"'actors'",[4784,4795],"'trailer'",[13747,13759],"'run_time'",[13821,13839],[13891,13900],[13943,13955],[14001,14017],[14086,14103],[14154,14169],"'poster_path'",[14218,14231],[14278,14288],[14332,14343],{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},[3156,3171],"'description'","Update the dependencies array to be: [dispatch, getToken, isLogged]",{"range":"494","text":"495"},"Update the dependencies array to be: [getUser, token]",{"range":"496","text":"497"},"Update the dependencies array to be: [auth, dispatch, isAdmin, token]",{"range":"498","text":"499"},"Update the dependencies array to be: [custom, data]",{"range":"500","text":"501"},"Update the dependencies array to be: [fetchData]",{"range":"502","text":"503"},"Update the dependencies array to be: [fetchData, key]",{"range":"504","text":"505"},"Update the dependencies array to be: [props.userId, variable]",{"range":"506","text":"507"},"Update the dependencies array to be: [Get_Reviews_eff, page]",{"range":"508","text":"509"},"Update the dependencies array to be: [custom, data, fetcData]",{"range":"510","text":"511"},[1093,1103],"[dispatch, getToken, isLogged]",[1150,1157],"[getUser, token]",[1295,1304],"[auth, dispatch, isAdmin, token]",[799,805],"[custom, data]",[781,783],"[fetchData]",[282,287],"[fetchData, key]",[2200,2202],"[props.userId, variable]",[2356,2362],"[Get_Reviews_eff, page]",[581,587],"[custom, data, fetcData]"]
[{"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\index.js":"1","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\reportWebVitals.js":"2","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\App.js":"3","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\store.js":"4","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\allUserAction.js":"5","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\authAction.js":"6","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\AdminPage.js":"7","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\index.js":"8","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Header.js":"9","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Body.js":"10","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\index.js":"11","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\userReducer.js":"12","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\authReducer.js":"13","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\tokenReducer.js":"14","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Footer.js":"15","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\LeftMenu.js":"16","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\Body.js":"17","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Login.js":"18","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Notfound.js":"19","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ActiveEmail.js":"20","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Register.js":"21","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Successfully.js":"22","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ForgotPw.js":"23","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ResetPassword.js":"24","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Profile.js":"25","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\News\\NewsPage.js":"26","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js":"27","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\functionCheck.js":"28","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Account.js":"29","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Advertisement.js":"30","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js":"31","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\News.js":"32","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Movie.js":"33","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\Config.js":"34","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js":"35","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js":"36","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\Information.js":"37","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\MovieDetail.js":"38","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Totalmovie.js":"39","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\Comments.js":"40","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\LikeDislikes.js":"41","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\ReplyComment.js":"42","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\SingleComment.js":"43","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Review.js":"44","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationReview.js":"45","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewReview.js":"46","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\Footers\\Footer.js":"47","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\Navbars\\AuthNavbar.js":"48","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\Dropdowns\\PagesDropdown.js":"49","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Home.js":"50","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Detail.js":"51","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Review\\Review.js":"52","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Review\\ReviewDetail.js":"53"},{"size":529,"mtime":1618709962455,"results":"54","hashOfConfig":"55"},{"size":375,"mtime":1617421466913,"results":"56","hashOfConfig":"55"},{"size":1643,"mtime":1618896636538,"results":"57","hashOfConfig":"55"},{"size":433,"mtime":1617421466913,"results":"58","hashOfConfig":"55"},{"size":392,"mtime":1617421466913,"results":"59","hashOfConfig":"55"},{"size":530,"mtime":1617421466913,"results":"60","hashOfConfig":"55"},{"size":775,"mtime":1617421466897,"results":"61","hashOfConfig":"55"},{"size":219,"mtime":1617421466913,"results":"62","hashOfConfig":"55"},{"size":3410,"mtime":1619229510147,"results":"63","hashOfConfig":"55"},{"size":2914,"mtime":1619237105463,"results":"64","hashOfConfig":"55"},{"size":160,"mtime":1617421466913,"results":"65","hashOfConfig":"55"},{"size":288,"mtime":1617421466913,"results":"66","hashOfConfig":"55"},{"size":598,"mtime":1617421466913,"results":"67","hashOfConfig":"55"},{"size":289,"mtime":1617421466913,"results":"68","hashOfConfig":"55"},{"size":1817,"mtime":1617680763747,"results":"69","hashOfConfig":"70"},{"size":1632,"mtime":1618895372800,"results":"71","hashOfConfig":"55"},{"size":805,"mtime":1619226202789,"results":"72","hashOfConfig":"55"},{"size":4387,"mtime":1618240073514,"results":"73","hashOfConfig":"55"},{"size":465,"mtime":1617421466913,"results":"74","hashOfConfig":"55"},{"size":1073,"mtime":1618245921908,"results":"75","hashOfConfig":"55"},{"size":10187,"mtime":1618246465206,"results":"76","hashOfConfig":"55"},{"size":1070,"mtime":1618246106048,"results":"77","hashOfConfig":"55"},{"size":1489,"mtime":1617421466913,"results":"78","hashOfConfig":"55"},{"size":2175,"mtime":1617421466913,"results":"79","hashOfConfig":"55"},{"size":9525,"mtime":1618985477105,"results":"80","hashOfConfig":"55"},{"size":1370,"mtime":1618976365658,"results":"81","hashOfConfig":"55"},{"size":2006,"mtime":1617421466913,"results":"82","hashOfConfig":"70"},{"size":489,"mtime":1617421466913,"results":"83","hashOfConfig":"55"},{"size":4035,"mtime":1618896292204,"results":"84","hashOfConfig":"55"},{"size":306,"mtime":1617421466897,"results":"85","hashOfConfig":"70"},{"size":2849,"mtime":1618896351044,"results":"86","hashOfConfig":"55"},{"size":6893,"mtime":1619229010426,"results":"87","hashOfConfig":"55"},{"size":4316,"mtime":1618896588555,"results":"88","hashOfConfig":"55"},{"size":475,"mtime":1617421466866,"results":"89","hashOfConfig":"70"},{"size":17833,"mtime":1618896011177,"results":"90","hashOfConfig":"55"},{"size":1118,"mtime":1618896120513,"results":"91","hashOfConfig":"55"},{"size":5978,"mtime":1618896077091,"results":"92","hashOfConfig":"55"},{"size":6289,"mtime":1619229362286,"results":"93","hashOfConfig":"55"},{"size":1926,"mtime":1618975745499,"results":"94","hashOfConfig":"55"},{"size":2536,"mtime":1617571916805,"results":"95","hashOfConfig":"55"},{"size":5544,"mtime":1618896201639,"results":"96","hashOfConfig":"55"},{"size":1812,"mtime":1611251147165,"results":"97","hashOfConfig":"55"},{"size":3494,"mtime":1617573381012,"results":"98","hashOfConfig":"55"},{"size":8981,"mtime":1619230618109,"results":"99","hashOfConfig":"55"},{"size":3955,"mtime":1617641010373,"results":"100","hashOfConfig":"70"},{"size":12400,"mtime":1619238649285,"results":"101","hashOfConfig":"55"},{"size":6348,"mtime":1618254834250,"results":"102","hashOfConfig":"55"},{"size":4978,"mtime":1618247030565,"results":"103","hashOfConfig":"55"},{"size":3915,"mtime":1616158669000,"results":"104","hashOfConfig":"55"},{"size":27894,"mtime":1618975712590,"results":"105","hashOfConfig":"55"},{"size":16555,"mtime":1618279007790,"results":"106","hashOfConfig":"55"},{"size":2051,"mtime":1619238299430,"results":"107","hashOfConfig":"55"},{"size":1522,"mtime":1619238072063,"results":"108","hashOfConfig":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"8b84of",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"111"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"iege1j",{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"111"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"111"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"111"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":19,"source":"186","usedDeprecatedRules":"111"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"111"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"111"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"111"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\index.js",[],["226","227"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\reportWebVitals.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\App.js",["228","229","230"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport BodyUser from './components/UserPage/LandingPage/Body'\r\n\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {fetchUser,dispatchGetUser,dispatchLogin} from './redux/actions/authAction'\r\nimport {fetchAllUsers,dispatchGetAllUser} from './redux/actions/allUserAction'\r\nimport AdminPage from './components/AdminPage/AdminPage'\r\n\r\n\r\nfunction App() {\r\n//const \r\nconst dispatch = useDispatch()\r\nconst token = useSelector(state => state.token)\r\nconst auth = useSelector(state => state.auth)\r\nconst {isLogged,isAdmin} = auth\r\n\r\n\r\nconst getToken = async()=>{\r\n  const res = await axios.post('/user/refresh_token',null)\r\n  dispatch({type:'GET_TOKEN',payload: res.data.access_token})\r\n}\r\n\r\nconst getUser = async() =>{\r\n  return fetchUser(token).then(res =>{\r\n    dispatch(dispatchGetUser(res))\r\n  })\r\n}\r\n\r\n\r\n//effect\r\nuseEffect(()=>{\r\n  const firstLogin = localStorage.getItem('firstLogin')\r\n  if(firstLogin){\r\n    getToken()\r\n    dispatch(dispatchLogin())\r\n  }\r\n},[isLogged])\r\n\r\nuseEffect(()=>{\r\n  if(token) getUser()\r\n},[token])\r\n\r\nuseEffect(()=>{\r\n  if(isAdmin){\r\n    fetchAllUsers(token,auth).then(res =>{\r\n      dispatch(dispatchGetAllUser(res))\r\n    })\r\n  }\r\n},[isAdmin])\r\n\r\n\r\n//render\r\n  return (\r\n    <div>\r\n      <Router>\r\n        {\r\n          isAdmin?<div className=\"body-admin\">\r\n          <div>\r\n            <AdminPage/>\r\n          </div>\r\n        </div>\r\n          :\r\n          <div>\r\n              <BodyUser/>\r\n          </div>\r\n        }\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\store.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\allUserAction.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\authAction.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\AdminPage.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\index.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Header.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Body.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\actions\\index.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\userReducer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\authReducer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\redux\\reducers\\tokenReducer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\LandingPage\\Footer.js",[],["231","232"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\LeftMenu.js",["233","234","235","236","237"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport { Menu} from 'antd';\r\nimport {PoweroffOutlined,\r\n    VideoCameraOutlined,\r\n    FundOutlined,\r\n    FundViewOutlined,\r\n    UserOutlined,\r\n    ForwardOutlined\r\n} from '@ant-design/icons';\r\n\r\nfunction LeftMenu() {\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n    const handleLogout = async() =>{\r\n        try {\r\n            await axios.get('/user/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href='/';\r\n        } catch (error) {\r\n            window.location.href='/';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu style={{height:\"100vh\"}} theme=\"dark\" mode=\"inline\">\r\n                    <div className='user-Admin'>{user.name}</div>\r\n                    <Menu.Item key=\"account\" icon={<UserOutlined />}><a href='/adm/account'/>Account</Menu.Item>\r\n                    <Menu.Item key=\"movies\" icon={<VideoCameraOutlined />}><a href='/adm/movies'/>Movies</Menu.Item>\r\n                    <Menu.Item key=\"news\" icon={<FundOutlined />}><a href='/adm/news'/>News</Menu.Item>\r\n                    <Menu.Item key=\"Review\" icon={<ForwardOutlined />}><a href='/adm/review'/>Review</Menu.Item>\r\n                    <Menu.Item key=\"advertisement\" icon={<FundViewOutlined />}><a href='/adm/advertisement'/>Advertisement</Menu.Item>\r\n                <Menu.Item onClick={handleLogout} key=\"logout\" icon={<PoweroffOutlined />}>\r\n                    Logout\r\n                    </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftMenu\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\LangdingPage\\Body.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Login.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Notfound.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ActiveEmail.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\Register.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\Successfully.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ForgotPw.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Profile.js",["238","239"],"import React,{useState,useEffect} from 'react'\r\nimport { Card,Row,Divider,Button ,Form,Input,message} from 'antd';\r\nimport { CameraOutlined} from '@ant-design/icons';\r\nimport {useSelector} from 'react-redux'\r\nimport banner from '../../../assets/img/banner.jpg'\r\nimport {Islengt} from '../../utils/functionCheck'\r\nimport axios from 'axios'\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nconst initialState ={\r\n    avatar:'',\r\n    name : '',\r\n    email: '',\r\n    password : '',\r\n    cf_password:'',\r\n    _id:''\r\n}\r\n\r\nfunction Profile() {\r\n    //const \r\n    const dispatch = useDispatch()\r\n    const [visible, setVisible] = useState(true);\r\n    const user = useSelector(state => state.auth.user)\r\n    const token = useSelector(state => state.token)\r\n    const [inforUser, setinforUser] = useState(initialState)\r\n    const [session, setsession] = useState([])\r\n  \r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        setinforUser({...user})\r\n        fetchSession()\r\n     },[user])\r\n\r\n     \r\n\r\n    const changeAvatar = async (e) =>{\r\n        e.preventDefault();\r\n        try {\r\n            const file = e.target.files[0]\r\n           if(!file) return console.error('No files were uploaded.');\r\n           if(file.size > 1024 * 1024)  return console.error('Image too large.');\r\n           if(file.type !== 'image/jpeg' && file.type !== 'image/png') return console.error('file format incorrect.');\r\n\r\n           let formData = new FormData()\r\n           formData.append('file',file)\r\n           const res = await axios.post('/api/upload_avatar',formData,{\r\n               headers:{'content-type':'multipart/form-data',Authorization:token}\r\n           })\r\n           setVisible(false)\r\n           setinforUser({...user,avatar:res.data.url})\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const SaveInfor = async e =>{\r\n        //change password\r\n        if(e.password){\r\n            if(!Islengt(e.password))\r\n                return message.error('password must be at least 6 character.')\r\n            try {\r\n                await axios.post('/user/reset',{password:e.password},{\r\n                    headers:{Authorization:token}\r\n                })\r\n                message.success('change password successfully')\r\n\r\n\r\n            } catch (error) {\r\n                return console.error(error);\r\n            }\r\n        }\r\n        //change information\r\n        try {\r\n            await axios.patch('/user/update',{avatar:inforUser.avatar,name:e.name},{headers:{Authorization:token}})\r\n            message.success('change information successfully')\r\n        } catch (error) {\r\n            return console.error(error);\r\n        } \r\n        setVisible(true)\r\n        const getToken = async()=>{\r\n            const res = await axios.post('/user/refresh_token',null)\r\n            dispatch({type:'GET_TOKEN',payload: res.data.access_token})\r\n          }\r\n        getToken()\r\n    }\r\n\r\n    const fetchSession = async () =>{\r\n        try {\r\n            if(user._id){\r\n                const res = await axios.get('/user/getsession/',{headers:{_id:user._id}})\r\n                return setsession(res.data);\r\n            }\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <Row>\r\n                    <div className='card'>\r\n                        <Card \r\n                        loading={\r\n                            inforUser.name?false:true\r\n                        }>\r\n                            <div className='banner' style={{backgroundImage:`url(${banner})`}}></div>\r\n\r\n                            <div className ='infor'>\r\n                                    <Divider orientation=\"left\">\r\n                                        <div className='avatar'>\r\n                                            <img alt='' src = {inforUser.avatar?inforUser.avatar:false}/>\r\n                                            <span>\r\n                                                <CameraOutlined/>\r\n                                                <p>Change</p>\r\n                                                <input type='file' name='file' id='file_up' onChange={changeAvatar}/>\r\n                                            </span>\r\n                                            \r\n                                        </div>\r\n                                    </Divider>\r\n                                \r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                    initialValues={{\r\n                                        name: inforUser.name,\r\n                                        email: inforUser.email,\r\n                                        \r\n                                      }}\r\n                                    onFinish={SaveInfor}\r\n                                    >\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                    >\r\n                                        <Input disabled={true}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[\r\n                                            { required: true, message: 'Please input your name!' }]}\r\n                                    >\r\n                                        <Input disabled={visible}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                    >\r\n                                        <Input.Password disabled={visible}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Cf_Password\"\r\n                                        name=\"cf_password\"\r\n                                        rules={[\r\n                                            ({ getFieldValue }) => ({\r\n                                                validator(rule, value) {\r\n                                                if (!value || getFieldValue('password') === value) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n                                                return Promise.reject('The two passwords that you entered do not match!');\r\n                                                },\r\n                                            })\r\n                                        ]}\r\n                                    >\r\n                                        <Input.Password disabled={visible}/>\r\n                                    </Form.Item>\r\n                                        <Form.Item >\r\n                                                <Button type=\"primary\" onClick={()=>setVisible(false)}>\r\n                                                Change information\r\n                                                </Button>\r\n                                        </Form.Item>\r\n                                        <Form.Item >\r\n                                                <Button type=\"primary\" htmlType=\"submit\" disabled={visible}>\r\n                                                Save\r\n                                                </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                            </div> \r\n                        </Card>\r\n                    </div>\r\n                    <div className='recent-activity'>\r\n                        <Card style={{ width: 800,height:'100%'}}>\r\n                            <h2>Recent activity</h2>\r\n                            <Divider/>\r\n                            {session && session.map((val, index) => (\r\n                                <div>\r\n                                    {val.movie?\r\n                                    <a href={`movie/${val.movie._id}`}>\r\n                                        {'Movie: ' + val.movie.title}\r\n                                    </a>\r\n                                    :null}\r\n\r\n                                    {val.review?\r\n                                     <a href={`review/${val.review._id}`}>\r\n                                        {'Review: ' + val.review.description}\r\n                                    </a>\r\n                                    :null}\r\n\r\n                                    {val.news?  \r\n                                     <a href={val.news.link} target='_blank'>\r\n                                        {'News: ' + val.news.description}\r\n                                    </a>\r\n                                    :null}\r\n                                    <p/>\r\n                                    {new Date(val.updatedAt).toLocaleString()}\r\n                                    <hr/>\r\n                                </div>\r\n                            ))}\r\n                        </Card>\r\n                    </div>\r\n             </Row>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\News\\NewsPage.js",["240"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './Newspage.css'\r\n\r\n\r\nfunction NewsPage() {\r\n    //const\r\n    const [News, setNews] = useState([])\r\n\r\n    //effect\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[])\r\n\r\n    const fetchData = async () =>{\r\n        try {\r\n            const res = await axios.get('/news/get_allnews')\r\n            return setNews(res.data.news);\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //render\r\n    return (\r\n        <div className=\"news_page\">\r\n            <h2>News</h2>\r\n            <div className='list_news relative flex flex-col min-w-0 break-words bg-white w-full mb-8 shadow-lg rounded-lg'>\r\n                {News && News.map((news, index) => (\r\n                    <div className='cast_news'>\r\n                            <img alt='' src={news.img }/>\r\n                        <a alt=\"source\" href={news.link}  target=\"_blank\" >\r\n                        <div style={{marginLeft:'30px'}}>\r\n                                <h1>{news.description}</h1>\r\n                                <label>{news.source} - {news.time}</label>\r\n                        </div>\r\n                        </a>\r\n                    </div>\r\n                ))}\r\n                \r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsPage\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\InTheater\\InTheatersPage.js",[],["241","242"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\utils\\functionCheck.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Account.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Advertisement.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewMovie.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\News.js",["243","244"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Movie.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\Config.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationMovie.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport moment   from 'moment';\r\nimport {Skeleton,Form,Input,List,DatePicker,InputNumber,Button,message} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport './commons.css'\r\nimport ReactPlayer from 'react-player/youtube'\r\nconst { TextArea } = Input;\r\n\r\nfunction InformationMovie(props) {\r\n    const {data, custom} = props\r\n    const token = useSelector(state => state.token)\r\n    const [movie, setmovie] = useState()\r\n    const dateFormat = 'DD/MM/YYYY';\r\n    const [posterImg, setposterImg] = useState('')\r\n    const [bannerImg, setbannerImg] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(!custom)\r\n            fetcMovies(data)\r\n    }, [data,custom])\r\n\r\n    const fetcMovies = async(data) => {\r\n        try {\r\n            const res = await axios.get('/movie/fetchMovieDetailTheaters',{headers:{url:data.linkmovie}})\r\n            setmovie(res.data.movie)\r\n            console.log(res.data.movie)\r\n        } catch (err) {\r\n           return err.response.data.msg\r\n        }\r\n       \r\n    }\r\n    const formItemLayoutWithOutLabel = {\r\n        wrapperCol: {\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 20, offset: 4 },\r\n        },\r\n      };\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 14 },\r\n      };\r\n\r\n\r\n    \r\n    // const uploadButton = (\r\n    //     <div>\r\n    //       <div style={{ marginTop: 8 }}>Upload</div>\r\n    //     </div>\r\n    // );\r\n\r\n    const Loading = (\r\n        <div>\r\n            <Skeleton.Image active={true} /> \r\n            <Skeleton active={true}/> \r\n        </div>\r\n    );\r\n    \r\n    const onFinish = async(e) =>{\r\n        try{\r\n            const mov={\r\n                title:e.title,\r\n                backdrop_path:bannerImg?bannerImg:movie.backdrop_path,\r\n                directors:e.directors,\r\n                actors:e.actors,\r\n                original_title:e.original_title,\r\n                overview:e.overview,\r\n                poster_path:posterImg?posterImg:movie.poster_path,\r\n                release_date:e.release_date,\r\n                run_time:e.run_time,\r\n                trailer:e.trailer,\r\n            }\r\n            \r\n            const res = await axios.post('/movie/addmovie/',{movie:mov},\r\n                {headers:{Authorization:token}\r\n            })\r\n            message.success(res.data.msg)\r\n\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n\r\n    const onCustom = async(e) =>{\r\n        try{\r\n            const movie={\r\n                title:e.title,\r\n                backdrop_path:bannerImg,\r\n                directors:e.directors,\r\n                actors:e.actors,\r\n                original_title:e.original_title,\r\n                overview:e.overview,\r\n                poster_path:posterImg,\r\n                release_date:e.release_date,\r\n                run_time:e.run_time,\r\n                trailer:e.trailer,\r\n            }\r\n\r\n            await axios.post('/movie/addmovie/',{movie:movie},\r\n                {headers:{Authorization:token}\r\n            })\r\n\r\n        }catch (error) {\r\n            message.error('add failed!');\r\n        }\r\n    }\r\n      \r\n    const upImage = async(e) =>{\r\n        e.preventDefault();\r\n        try {\r\n            const file = e.target.files[0]\r\n           if(!file) return console.error('No files were uploaded.');\r\n           if(file.type !== 'image/jpeg' && file.type !== 'image/png') return console.error('file format incorrect.');\r\n\r\n           let formData = new FormData()\r\n           formData.append('file',file)\r\n           const res = await axios.post('/api/uploadimg',formData,{\r\n               headers:{'content-type':'multipart/form-data',Authorization:token}\r\n           })\r\n\r\n           if(e.target.id===\"poster\"){\r\n                setposterImg(res.data.url)\r\n           }\r\n           if(e.target.id===\"banner\"){\r\n                setbannerImg(res.data.url)\r\n          }\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    if(custom)\r\n    {\r\n        return (\r\n            <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onCustom}\r\n                        initialValues={{\r\n                            ['run-time']: 1,\r\n                            ['original_title']:\"\",\r\n                            ['title']:\"\",\r\n                            ['overview']:\"\",\r\n                            ['release_date']:\"\",\r\n                            ['backdrop_path']:\"\",\r\n                            ['directors']:\"\",\r\n                            ['actors']:\"\",\r\n                            ['trailer']:\"\",\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run_time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.List\r\n                                name=\"actors\"\r\n                                rules={[\r\n                                {\r\n                                    validator: async (_, actors) => {\r\n                                    if (!actors || actors.length < 1) {\r\n                                        return Promise.reject(new Error('At least 1 actors'));\r\n                                    }\r\n                                    },\r\n                                },\r\n                                ]}\r\n                            >\r\n                                {(fields, { add, remove }, { errors }) => (\r\n                                <>\r\n                                    {fields.map((field, index) => (\r\n                                    <Form.Item\r\n                                        {...formItemLayoutWithOutLabel}\r\n                                        label='Actors'\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    >\r\n                                        <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input Actors name or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                        >\r\n                                        <Input placeholder=\"Actors name\" style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n                                        {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                        ) : null}\r\n                                    </Form.Item>\r\n                                    ))}\r\n                                    <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: '60%' }}\r\n                                        icon={<PlusOutlined />}\r\n                                    >\r\n                                        Add Actors\r\n                                    </Button>\r\n                                    <Form.ErrorList errors={errors} />\r\n                                    </Form.Item>\r\n                                </>\r\n                                )}\r\n                            </Form.List>\r\n\r\n                            <Form.List\r\n                                name=\"directors\"\r\n                                rules={[\r\n                                {\r\n                                    validator: async (_, directors) => {\r\n                                    if (!directors || directors.length < 1) {\r\n                                        return Promise.reject(new Error('At least 1 directors'));\r\n                                    }\r\n                                    },\r\n                                },\r\n                                ]}\r\n                            >\r\n                                {(fields, { add, remove }, { errors }) => (\r\n                                <>\r\n                                    {fields.map((field, index) => (\r\n                                    <Form.Item\r\n                                        {...formItemLayoutWithOutLabel}\r\n                                        label='Directors'\r\n                                        required={false}\r\n                                        key={field.key}\r\n                                    >\r\n                                        <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input Actors name or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                        >\r\n                                        <Input placeholder=\"directors name\" style={{ width: '60%' }} />\r\n                                        </Form.Item>\r\n                                        {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                        ) : null}\r\n                                    </Form.Item>\r\n                                    ))}\r\n                                    <Form.Item>\r\n                                    <Button\r\n                                        type=\"dashed\"\r\n                                        onClick={() => add()}\r\n                                        style={{ width: '60%' }}\r\n                                        icon={<PlusOutlined />}\r\n                                    >\r\n                                        Add Directors\r\n                                    </Button>\r\n                                    <Form.ErrorList errors={errors} />\r\n                                    </Form.Item>\r\n                                </>\r\n                                )}\r\n                            </Form.List>\r\n\r\n\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                            <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img style={{height:\"300px\"}} alt=\"poster\" src={posterImg}/>\r\n                                <Input type='file' id='poster' onChange={upImage}/>\r\n                            \r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <Input/>\r\n                            </Form.Item>\r\n\r\n\r\n                        <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img style={{width:\"100%\"}} alt=\"banner\" src={bannerImg}/>\r\n                            <input type='file' id='banner' onChange={upImage}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n\r\n                </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div> \r\n            {movie?\r\n                <div>\r\n                     <Form\r\n                        name=\"validate_other\"\r\n                        {...formItemLayout}\r\n                        onFinish={onFinish}\r\n                        initialValues={{\r\n                            ['run_time']: movie.runtime?movie.runtime:1,\r\n                            ['original_title']:movie.original_title,\r\n                            ['title']:movie.title,\r\n                            ['overview']:movie.overview,\r\n                            ['release_date']:moment(movie.release_date,dateFormat),\r\n                            ['backdrop_path']:movie.backdrop_path,\r\n                            ['poster_path']:movie.poster_path,\r\n                            ['directors']:movie.directors,\r\n                            ['actors']:movie.actors,\r\n                            ['trailer']:movie.trailer,\r\n                        }}\r\n                        >\r\n                        <Form.Item label=\"Title\" name='title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"original title\" name='original_title'>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"release date\" name='release_date'>\r\n                            <DatePicker format={dateFormat}/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Run Time\">\r\n                            <Form.Item name=\"run_time\" noStyle>\r\n                            <InputNumber min={1}/>\r\n                            </Form.Item>\r\n                            <span className=\"ant-form-text\"> Minutes</span>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"directors\" label=\"Directors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                            size=\"small\"\r\n                            bordered\r\n                            dataSource={movie.directors}\r\n                            renderItem={item => <List.Item>{item}</List.Item>}\r\n                            />\r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item name=\"actors\" label=\"Actors\">\r\n                            <List style={{overflow:'auto',height:'100px'}}\r\n                                size=\"small\"\r\n                                bordered\r\n                                dataSource={movie.actors}\r\n                                renderItem={item => <List.Item>{item}</List.Item>}\r\n                                />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"overview\" label=\"Overview\">\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                                name=\"poster_path\"\r\n                                label=\"Poster\"\r\n                            >\r\n                                <img style={{height:\"300px\"}} alt=\"poster\" src={posterImg?posterImg:movie.poster_path}/>\r\n                                <Input type='file' id='poster' onChange={upImage}/>\r\n                            </Form.Item>\r\n                        <Form.Item\r\n                                name=\"trailer\"\r\n                                label=\"Trailer\"\r\n                            >\r\n                                <ReactPlayer width=\"100%\" height=\"100%\" url={movie.trailer} />\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item label=\"Backdrop\" name='backdrop_path'>\r\n                            <img style={{width:\"100%\"}} alt=\"banner\" src={bannerImg?bannerImg:movie.backdrop_path}/>\r\n                            <input type='file' id='banner' onChange={upImage}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n\r\n                </div>\r\n                :<div>{Loading}</div>\r\n            }\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n// }\r\n\r\nexport default InformationMovie\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\MovieCard.js",["264"],"import React,{useState} from 'react'\r\nimport {Button,Modal} from 'antd';\r\nimport InformationMovie from './InformationMovie'\r\n\r\nfunction MovieCard(props) {\r\n    \r\n    const {movie} = props\r\n    const [visible, setvisible] = useState(false)\r\n    const handleAdd =(e) =>{\r\n        setvisible (!visible)\r\n    }\r\n\r\n    return (\r\n        <div className='search-detail'>\r\n            <img alt='' style={{width:'180px'}} src={movie.poster_path} onClick={handleAdd}/>\r\n            <div style={{color:'black'}}>{movie.title}</div>\r\n            <Modal\r\n                height='70%'\r\n                width=\"80%\"\r\n                title=\"Add new movies\"\r\n                placement=\"top\"\r\n                visible={visible}\r\n                title=\"Information Movie\"\r\n                closable={false}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={()=>{setvisible (false)}}>\r\n                      Close\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                <InformationMovie data = {movie}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\Information.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\MovieDetail.js",["265","266","267","268","269"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Totalmovie.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\Comments.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\LikeDislikes.js",["270","271","272"],"import React, { useEffect, useState } from 'react'\r\nimport { Tooltip } from 'antd';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const isLogged = useSelector(state => state.auth.isLogged)\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(variable)\r\n        Axios.post('/like/getLikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post('/like/getDislikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n       \r\n        if (!isLogged) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        if (LikeAction === null) {\r\n\r\n            Axios.post('/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //If dislike button is already clicked\r\n\r\n                        if (DislikeAction !== null) {\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        alert('Failed to increase the like')\r\n                    }\r\n                })\r\n\r\n\r\n        } else {\r\n\r\n            Axios.post('/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease the like')\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onDisLike = () => {\r\n\r\n        if (!isLogged) {\r\n            return alert('Please Log in first');\r\n        }\r\n\r\n        if (DislikeAction !== null) {\r\n\r\n            Axios.post('/like/unDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n\r\n            Axios.post('/like/upDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //If dislike button is already clicked\r\n                        if(LikeAction !== null ) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike} />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon\r\n                        type=\"dislike\"\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\ReplyComment.js",["273"],"import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                    onClick={handleChange} >\r\n                    View {ChildCommentNumber} more comment(s)\r\n             </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Sections\\SingleComment.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\Review.js",["274","275"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\InformationReview.js",["276","277","278","279","280","281","282","283","284","285","286","287"],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\AdminPage\\Body\\commons\\AddNewReview.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\Footers\\Footer.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\Navbars\\AuthNavbar.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\Dropdowns\\PagesDropdown.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Home.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Movie\\Detail.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Review\\Review.js",[],"D:\\DoanChuyenNganh\\ReviewPhim\\client\\src\\components\\UserPage\\View\\Review\\ReviewDetail.js",["288"],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":39,"column":3,"nodeType":"295","endLine":39,"endColumn":13,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"297","line":43,"column":3,"nodeType":"295","endLine":43,"endColumn":10,"suggestions":"298"},{"ruleId":"293","severity":1,"message":"299","line":51,"column":3,"nodeType":"295","endLine":51,"endColumn":12,"suggestions":"300"},{"ruleId":"289","replacedBy":"301"},{"ruleId":"291","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":30,"column":70,"nodeType":"305","endLine":30,"endColumn":94},{"ruleId":"303","severity":1,"message":"304","line":31,"column":76,"nodeType":"305","endLine":31,"endColumn":99},{"ruleId":"303","severity":1,"message":"304","line":32,"column":67,"nodeType":"305","endLine":32,"endColumn":88},{"ruleId":"303","severity":1,"message":"304","line":33,"column":72,"nodeType":"305","endLine":33,"endColumn":95},{"ruleId":"303","severity":1,"message":"304","line":34,"column":80,"nodeType":"305","endLine":34,"endColumn":110},{"ruleId":"293","severity":1,"message":"306","line":38,"column":8,"nodeType":"295","endLine":38,"endColumn":14,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":209,"column":62,"nodeType":"310","endLine":209,"endColumn":77},{"ruleId":"308","severity":1,"message":"309","line":34,"column":59,"nodeType":"310","endLine":34,"endColumn":74},{"ruleId":"289","replacedBy":"311"},{"ruleId":"291","replacedBy":"312"},{"ruleId":"308","severity":1,"message":"309","line":32,"column":79,"nodeType":"310","endLine":32,"endColumn":94},{"ruleId":"313","severity":1,"message":"314","line":89,"column":30,"nodeType":"305","endLine":89,"endColumn":49},{"ruleId":"315","severity":1,"message":"316","line":145,"column":29,"nodeType":"317","messageId":"318","endLine":145,"endColumn":44,"fix":"319"},{"ruleId":"315","severity":1,"message":"320","line":146,"column":29,"nodeType":"317","messageId":"318","endLine":146,"endColumn":50,"fix":"321"},{"ruleId":"315","severity":1,"message":"322","line":147,"column":29,"nodeType":"317","messageId":"318","endLine":147,"endColumn":41,"fix":"323"},{"ruleId":"315","severity":1,"message":"324","line":148,"column":29,"nodeType":"317","messageId":"318","endLine":148,"endColumn":44,"fix":"325"},{"ruleId":"315","severity":1,"message":"326","line":149,"column":29,"nodeType":"317","messageId":"318","endLine":149,"endColumn":48,"fix":"327"},{"ruleId":"315","severity":1,"message":"328","line":150,"column":29,"nodeType":"317","messageId":"318","endLine":150,"endColumn":49,"fix":"329"},{"ruleId":"315","severity":1,"message":"330","line":151,"column":29,"nodeType":"317","messageId":"318","endLine":151,"endColumn":45,"fix":"331"},{"ruleId":"315","severity":1,"message":"332","line":152,"column":29,"nodeType":"317","messageId":"318","endLine":152,"endColumn":42,"fix":"333"},{"ruleId":"315","severity":1,"message":"334","line":153,"column":29,"nodeType":"317","messageId":"318","endLine":153,"endColumn":43,"fix":"335"},{"ruleId":"315","severity":1,"message":"336","line":333,"column":29,"nodeType":"317","messageId":"318","endLine":333,"endColumn":72,"fix":"337"},{"ruleId":"315","severity":1,"message":"320","line":334,"column":29,"nodeType":"317","messageId":"318","endLine":334,"endColumn":68,"fix":"338"},{"ruleId":"315","severity":1,"message":"322","line":335,"column":29,"nodeType":"317","messageId":"318","endLine":335,"endColumn":50,"fix":"339"},{"ruleId":"315","severity":1,"message":"324","line":336,"column":29,"nodeType":"317","messageId":"318","endLine":336,"endColumn":56,"fix":"340"},{"ruleId":"315","severity":1,"message":"326","line":337,"column":29,"nodeType":"317","messageId":"318","endLine":337,"endColumn":83,"fix":"341"},{"ruleId":"315","severity":1,"message":"328","line":338,"column":29,"nodeType":"317","messageId":"318","endLine":338,"endColumn":66,"fix":"342"},{"ruleId":"315","severity":1,"message":"343","line":339,"column":29,"nodeType":"317","messageId":"318","endLine":339,"endColumn":62,"fix":"344"},{"ruleId":"315","severity":1,"message":"330","line":340,"column":29,"nodeType":"317","messageId":"318","endLine":340,"endColumn":58,"fix":"345"},{"ruleId":"315","severity":1,"message":"332","line":341,"column":29,"nodeType":"317","messageId":"318","endLine":341,"endColumn":52,"fix":"346"},{"ruleId":"315","severity":1,"message":"334","line":342,"column":29,"nodeType":"317","messageId":"318","endLine":342,"endColumn":54,"fix":"347"},{"ruleId":"348","severity":1,"message":"349","line":23,"column":17,"nodeType":"310","endLine":23,"endColumn":42},{"ruleId":"293","severity":1,"message":"350","line":27,"column":7,"nodeType":"295","endLine":27,"endColumn":9,"suggestions":"351"},{"ruleId":"293","severity":1,"message":"352","line":31,"column":7,"nodeType":"295","endLine":31,"endColumn":13,"suggestions":"353"},{"ruleId":"313","severity":1,"message":"314","line":110,"column":21,"nodeType":"305","endLine":110,"endColumn":116},{"ruleId":"313","severity":1,"message":"314","line":112,"column":21,"nodeType":"305","endLine":112,"endColumn":53},{"ruleId":"308","severity":1,"message":"309","line":149,"column":59,"nodeType":"310","endLine":149,"endColumn":74},{"ruleId":"354","severity":1,"message":"355","line":36,"column":50,"nodeType":"356","messageId":"357","endLine":36,"endColumn":52},{"ruleId":"354","severity":1,"message":"355","line":53,"column":56,"nodeType":"356","messageId":"357","endLine":53,"endColumn":58},{"ruleId":"293","severity":1,"message":"358","line":63,"column":8,"nodeType":"295","endLine":63,"endColumn":10,"suggestions":"359"},{"ruleId":"354","severity":1,"message":"355","line":11,"column":42,"nodeType":"356","messageId":"357","endLine":11,"endColumn":44},{"ruleId":"293","severity":1,"message":"360","line":113,"column":8,"nodeType":"295","endLine":113,"endColumn":22,"suggestions":"361"},{"ruleId":"362","severity":1,"message":"363","line":195,"column":33,"nodeType":"305","endLine":195,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":14},{"ruleId":"364","severity":1,"message":"368","line":4,"column":29,"nodeType":"366","messageId":"367","endLine":4,"endColumn":33},{"ruleId":"364","severity":1,"message":"369","line":4,"column":34,"nodeType":"366","messageId":"367","endLine":4,"endColumn":44},{"ruleId":"364","severity":1,"message":"370","line":4,"column":45,"nodeType":"366","messageId":"367","endLine":4,"endColumn":56},{"ruleId":"364","severity":1,"message":"371","line":5,"column":10,"nodeType":"366","messageId":"367","endLine":5,"endColumn":29},{"ruleId":"364","severity":1,"message":"372","line":5,"column":31,"nodeType":"366","messageId":"367","endLine":5,"endColumn":43},{"ruleId":"364","severity":1,"message":"373","line":11,"column":11,"nodeType":"366","messageId":"367","endLine":11,"endColumn":16},{"ruleId":"293","severity":1,"message":"374","line":17,"column":8,"nodeType":"295","endLine":17,"endColumn":14,"suggestions":"375"},{"ruleId":"364","severity":1,"message":"376","line":29,"column":11,"nodeType":"366","messageId":"367","endLine":29,"endColumn":37},{"ruleId":"364","severity":1,"message":"377","line":43,"column":11,"nodeType":"366","messageId":"367","endLine":43,"endColumn":23},{"ruleId":"364","severity":1,"message":"378","line":66,"column":11,"nodeType":"366","messageId":"367","endLine":66,"endColumn":19},{"ruleId":"315","severity":1,"message":"379","line":118,"column":29,"nodeType":"317","messageId":"318","endLine":118,"endColumn":58,"fix":"380"},{"ruleId":"293","severity":1,"message":"350","line":17,"column":7,"nodeType":"295","endLine":17,"endColumn":9,"suggestions":"381"},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getToken'. Either include them or remove the dependency array.","ArrayExpression",["384"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["385"],"React Hook useEffect has missing dependencies: 'auth', 'dispatch', and 'token'. Either include them or remove the dependency array.",["386"],["382"],["383"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchSession'. Either include it or remove the dependency array.",["387"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["382"],["383"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-computed-key","Unnecessarily computed property ['run-time'] found.","Property","unnecessarilyComputedProperty",{"range":"388","text":"389"},"Unnecessarily computed property ['original_title'] found.",{"range":"390","text":"391"},"Unnecessarily computed property ['title'] found.",{"range":"392","text":"393"},"Unnecessarily computed property ['overview'] found.",{"range":"394","text":"395"},"Unnecessarily computed property ['release_date'] found.",{"range":"396","text":"397"},"Unnecessarily computed property ['backdrop_path'] found.",{"range":"398","text":"399"},"Unnecessarily computed property ['directors'] found.",{"range":"400","text":"401"},"Unnecessarily computed property ['actors'] found.",{"range":"402","text":"403"},"Unnecessarily computed property ['trailer'] found.",{"range":"404","text":"405"},"Unnecessarily computed property ['run_time'] found.",{"range":"406","text":"407"},{"range":"408","text":"391"},{"range":"409","text":"393"},{"range":"410","text":"395"},{"range":"411","text":"397"},{"range":"412","text":"399"},"Unnecessarily computed property ['poster_path'] found.",{"range":"413","text":"414"},{"range":"415","text":"401"},{"range":"416","text":"403"},{"range":"417","text":"405"},"react/jsx-no-duplicate-props","No duplicate props allowed","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["418"],"React Hook useEffect has a missing dependency: 'postSession'. Either include it or remove the dependency array.",["419"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.userId' and 'variable'. Either include them or remove the dependency array.",["420"],"React Hook useEffect has missing dependencies: 'Get_Reviews_eff' and 'Reviews_eff'. Either include them or remove the dependency array.",["421"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'DatePicker' is defined but never used.","'InputNumber' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'custom' and 'fetcData'. Either include them or remove the dependency array.",["422"],"'formItemLayoutWithOutLabel' is assigned a value but never used.","'uploadButton' is assigned a value but never used.","'onCustom' is assigned a value but never used.","Unnecessarily computed property ['description'] found.",{"range":"423","text":"424"},["425"],"no-global-assign","no-unsafe-negation",{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},[4417,4429],"'run-time'",[4463,4481],"'original_title'",[4515,4524],"'title'",[4558,4570],"'overview'",[4604,4620],"'release_date'",[4654,4671],"'backdrop_path'",[4705,4718],"'directors'",[4752,4762],"'actors'",[4796,4807],"'trailer'",[13759,13771],"'run_time'",[13833,13851],[13903,13912],[13955,13967],[14013,14029],[14098,14115],[14166,14181],"'poster_path'",[14230,14243],[14290,14300],[14344,14355],{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},[3156,3171],"'description'",{"desc":"434","fix":"444"},"Update the dependencies array to be: [dispatch, getToken, isLogged]",{"range":"445","text":"446"},"Update the dependencies array to be: [getUser, token]",{"range":"447","text":"448"},"Update the dependencies array to be: [auth, dispatch, isAdmin, token]",{"range":"449","text":"450"},"Update the dependencies array to be: [fetchSession, user]",{"range":"451","text":"452"},"Update the dependencies array to be: [fetchData]",{"range":"453","text":"454"},"Update the dependencies array to be: [postSession, user]",{"range":"455","text":"456"},"Update the dependencies array to be: [props.userId, variable]",{"range":"457","text":"458"},"Update the dependencies array to be: [Get_Reviews_eff, Reviews_eff, page, visible]",{"range":"459","text":"460"},"Update the dependencies array to be: [custom, data, fetcData]",{"range":"461","text":"462"},{"range":"463","text":"454"},[1093,1103],"[dispatch, getToken, isLogged]",[1150,1157],"[getUser, token]",[1295,1304],"[auth, dispatch, isAdmin, token]",[1052,1058],"[fetchSession, user]",[883,885],"[fetchData]",[943,949],"[postSession, user]",[2146,2148],"[props.userId, variable]",[3666,3680],"[Get_Reviews_eff, Reviews_eff, page, visible]",[581,587],"[custom, data, fetcData]",[285,287]]